openapi: 3.0.1
info:
  title: Task Management Service
  description: API for managing tasks for patients, doctors, and administrators.
  version: 1.0.0

servers:
  - url: /prod

paths:
  /auth/login:
    post:
      operationId: postAuthLogin
      summary: Authenticate a user
      description: No roles are required to authenticate
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /tasks:
    post:
      summary: Create a new task
      operationId: postTasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Task created successfully

  /tasks/{taskId}/images:
    post:
      summary: Upload an image for a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      operationId: postTaskImages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostImageRequest'
      responses:
        '201':
          description: Image uploaded successfully
    get:
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      summary: Get images for a task
      operationId: getTaskImages
      responses:
        '200':
          description: List of images with pre-signed URLs

  /tasks/{taskId}:
    patch:
      summary: Update a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      operationId: patchTaskById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Task updated successfully

  /doctor/tasks:
    get:
      operationId: getDoctorTasks
      summary: Retrieve all tasks assigned to the doctor
      description: Roles Allowed **Doctor**
      tags:
        - Doctor
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /admin/users:
    post:
      operationId: postAdminUsers
      summary: Create a new user (patient or doctor)
      description: Roles Allowed **Admin**
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /admin/users/{userId}:
    put:
      operationId: putAdminUserById
      summary: Update details of an existing user
      description: Roles Allowed **Admin**
      tags:
        - Admin
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      operationId: deleteAdminUserById
      summary: Remove a user
      description: Roles Allowed **Admin**
      tags:
        - Admin
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User removed

  /admin/consultation-types:
    post:
      operationId: postAdminConsultationTypes
      summary: Add a new consultation type
      description: Roles Allowed **Admin**
      tags:
        - Consultation Types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationTypeRequest'
      responses:
        '201':
          description: Consultation type added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationType'

  /consultation-types:
    get:
      operationId: getAdminConsultationTypes
      summary: Retrieve all consultation types
      tags:
        - Consultation Types
      responses:
        '200':
          description: List of consultation types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsultationType'

  /admin/consultation-types/{id}:
    put:
      operationId: putAdminConsultationTypeById
      summary: Update a consultation type
      tags:
        - Consultation Types
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: "Updated Consultation"
                description:
                  type: string
                  example: "Updated description"
                price:
                  type: number
                  example: 120.0
      responses:
        '200':
          description: Consultation type updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationType'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    Task:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          example: "Diagnosis"
        status:
          type: string
          example: "Open"
        patientId:
          type: string
        doctorId:
          type: string
          nullable: true
        price:
          type: number
          format: float
        notes:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string

    CreateTaskRequest:
      type: object
      properties:
        type:
          type: string
        status:
          type: string
          enum:
            - Open
            - In Progress
            - Closed
        patientId:
          type: string
        doctorId:
          type: string
          nullable: true
        price:
          type: number
          format: float
        notes:
          type: string

    UpdateTaskRequest:
      type: object
      properties:
        status:
          type: string
        doctorId:
          type: string
          nullable: true
        price:
          type: number
          format: float
        notes:
          type: string

    Image:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        url:
          type: string
          format: uri
        patientId:
          type: string
        taskId:
          type: string
          nullable: true
        uploadedAt:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    ConsultationTypeRequest:
      type: object
      properties:
        type:
          type: string
        description:
          type: string
        price:
          type: number
    ConsultationType:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        description:
          type: string
        price:
          type: number
    PostImageRequest:
      type: object
      properties:
        type:
          type: string
          example: "X-Ray"
        data:
          type: string
          description: "Base64 encoded string of the image"
        contentType:
          type: string
          example: "image/png"
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
          enum: [ PATIENT, DOCTOR ]
