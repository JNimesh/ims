/* tslint:disable */
/* eslint-disable */
/**
 * Task Management Service
 * API for managing tasks for patients, doctors, and administrators.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FinancialRecord,
} from '../models/index';
import {
    FinancialRecordFromJSON,
    FinancialRecordToJSON,
} from '../models/index';

export interface FetchFinancialRecordsRequest {
    duration: string;
    consultationType?: string;
}

/**
 * 
 */
export class FinancialRecordsApi extends runtime.BaseAPI {

    /**
     * Fetch financial records for a specific duration. Duration must be in either `DD-MM-YYYY` (daily) or `MM-YYYY` (monthly) format. You can optionally filter by `consultationType`. 
     * Retrieve financial records by duration (daily or monthly)
     */
    async fetchFinancialRecordsRaw(requestParameters: FetchFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecord>>> {
        if (requestParameters['duration'] == null) {
            throw new runtime.RequiredError(
                'duration',
                'Required parameter "duration" was null or undefined when calling fetchFinancialRecords().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['duration'] != null) {
            queryParameters['duration'] = requestParameters['duration'];
        }

        if (requestParameters['consultationType'] != null) {
            queryParameters['consultationType'] = requestParameters['consultationType'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/financial-records`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(FinancialRecordFromJSON));
    }

    /**
     * Fetch financial records for a specific duration. Duration must be in either `DD-MM-YYYY` (daily) or `MM-YYYY` (monthly) format. You can optionally filter by `consultationType`. 
     * Retrieve financial records by duration (daily or monthly)
     */
    async fetchFinancialRecords(requestParameters: FetchFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecord>> {
        const response = await this.fetchFinancialRecordsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
