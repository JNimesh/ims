/* tslint:disable */
/* eslint-disable */
/**
 * Task Management Service
 * API for managing tasks for patients, doctors, and administrators.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateDoctorCompetenciesRequestCompetenciesInner } from './CreateDoctorCompetenciesRequestCompetenciesInner';
import {
    CreateDoctorCompetenciesRequestCompetenciesInnerFromJSON,
    CreateDoctorCompetenciesRequestCompetenciesInnerFromJSONTyped,
    CreateDoctorCompetenciesRequestCompetenciesInnerToJSON,
    CreateDoctorCompetenciesRequestCompetenciesInnerToJSONTyped,
} from './CreateDoctorCompetenciesRequestCompetenciesInner';

/**
 * 
 * @export
 * @interface CreateDoctorCompetenciesRequest
 */
export interface CreateDoctorCompetenciesRequest {
    /**
     * 
     * @type {Array<CreateDoctorCompetenciesRequestCompetenciesInner>}
     * @memberof CreateDoctorCompetenciesRequest
     */
    competencies: Array<CreateDoctorCompetenciesRequestCompetenciesInner>;
}

/**
 * Check if a given object implements the CreateDoctorCompetenciesRequest interface.
 */
export function instanceOfCreateDoctorCompetenciesRequest(value: object): value is CreateDoctorCompetenciesRequest {
    if (!('competencies' in value) || value['competencies'] === undefined) return false;
    return true;
}

export function CreateDoctorCompetenciesRequestFromJSON(json: any): CreateDoctorCompetenciesRequest {
    return CreateDoctorCompetenciesRequestFromJSONTyped(json, false);
}

export function CreateDoctorCompetenciesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDoctorCompetenciesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'competencies': ((json['competencies'] as Array<any>).map(CreateDoctorCompetenciesRequestCompetenciesInnerFromJSON)),
    };
}

export function CreateDoctorCompetenciesRequestToJSON(json: any): CreateDoctorCompetenciesRequest {
    return CreateDoctorCompetenciesRequestToJSONTyped(json, false);
}

export function CreateDoctorCompetenciesRequestToJSONTyped(value?: CreateDoctorCompetenciesRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'competencies': ((value['competencies'] as Array<any>).map(CreateDoctorCompetenciesRequestCompetenciesInnerToJSON)),
    };
}

