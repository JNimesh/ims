/* tslint:disable */
/* eslint-disable */
/**
 * Task Management Service
 * API for managing tasks for patients, doctors, and administrators.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DoctorCompetenciesInnerConsultationType } from './DoctorCompetenciesInnerConsultationType';
import {
    DoctorCompetenciesInnerConsultationTypeFromJSON,
    DoctorCompetenciesInnerConsultationTypeFromJSONTyped,
    DoctorCompetenciesInnerConsultationTypeToJSON,
    DoctorCompetenciesInnerConsultationTypeToJSONTyped,
} from './DoctorCompetenciesInnerConsultationType';

/**
 * 
 * @export
 * @interface DoctorCompetenciesInner
 */
export interface DoctorCompetenciesInner {
    /**
     * 
     * @type {string}
     * @memberof DoctorCompetenciesInner
     */
    consultationTypeId?: string;
    /**
     * 
     * @type {DoctorCompetenciesInnerConsultationType}
     * @memberof DoctorCompetenciesInner
     */
    consultationType?: DoctorCompetenciesInnerConsultationType;
}

/**
 * Check if a given object implements the DoctorCompetenciesInner interface.
 */
export function instanceOfDoctorCompetenciesInner(value: object): value is DoctorCompetenciesInner {
    return true;
}

export function DoctorCompetenciesInnerFromJSON(json: any): DoctorCompetenciesInner {
    return DoctorCompetenciesInnerFromJSONTyped(json, false);
}

export function DoctorCompetenciesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DoctorCompetenciesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'consultationTypeId': json['consultationTypeId'] == null ? undefined : json['consultationTypeId'],
        'consultationType': json['consultationType'] == null ? undefined : DoctorCompetenciesInnerConsultationTypeFromJSON(json['consultationType']),
    };
}

export function DoctorCompetenciesInnerToJSON(json: any): DoctorCompetenciesInner {
    return DoctorCompetenciesInnerToJSONTyped(json, false);
}

export function DoctorCompetenciesInnerToJSONTyped(value?: DoctorCompetenciesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'consultationTypeId': value['consultationTypeId'],
        'consultationType': DoctorCompetenciesInnerConsultationTypeToJSON(value['consultationType']),
    };
}

